---
description: 
globs: 
alwaysApply: true
---
# NextJS 스타트킷 프로젝트 가이드

## 프로젝트 개요
@README.md

이 프로젝트는 NextJS 15.2.3 (React 19) 기반 스타터 템플릿으로, 현대적인 웹 애플리케이션 개발을 위한 다양한 도구와 라이브러리를 포함하고 있습니다.

## 주요 기술 스택 및 구조

### 핵심 기술
- **프레임워크**: Next.js 15.2.3 (App Router)
- **데이터베이스**: Drizzle ORM + NeonDB (PostgreSQL)
- **인증**: NextAuth v5 (Auth.js)
- **API**: tRPC + TanStack Query
- **UI**: shadcn/ui + Tailwind CSS
- **폼 관리**: React Hook Form + Zod

### 폴더 구조
```
src/
├── app/                  # Next.js 애플리케이션 라우트
│   ├── (main)/           # 메인 라우트 그룹
│   ├── (auth)/           # 인증 관련 라우트
│   ├── (protected)/      # 인증 보호된 라우트
│   └── api/              # API 라우트
├── components/           # 전역 컴포넌트
│   └── ui/               # UI 컴포넌트 (shadcn/ui)
├── server/               # 서버 관련 코드
│   ├── actions/          # 서버 액션
│   └── trpc/             # tRPC 설정
├── db/                   # 데이터베이스 관련
├── auth/                 # 인증 관련 설정
├── lib/                  # 유틸리티 및 헬퍼 함수
└── hooks/                # 커스텀 훅
```

## 코드 작성 규칙

### 컴포넌트 구조
1. **전역 컴포넌트**: `src/components/` 폴더에 위치하며 애플리케이션 전체에서 재사용
2. **로컬 컴포넌트**: 각 라우트 폴더 내의 `_components/` 폴더에 위치하며 해당 라우트에 특화됨

### shadcn/ui 컴포넌트 사용
```tsx
// 컴포넌트 사용 예시
import { Button } from "@/components/ui/button";

export function Component() {
  return (
    <Button variant="outline" size="lg">
      버튼 텍스트
    </Button>
  );
}
```

### tRPC API 패턴
- `src/server/trpc/` 디렉토리에 라우터와 프로시저 정의
- 클라이언트에서는 `trpc.xxx.yyy.useQuery()` 형태로 호출

### 인증 관련
- NextAuth v5 사용
- 보호된 라우트는 `(protected)` 그룹 내에 위치
- 미들웨어를 통한 경로 보호

### 폼 관리
- React Hook Form + Zod 조합으로 타입 안전한 폼 구현

## 개발 명령어
- 개발 서버: `npm run dev`
- DB 스튜디오: `npm run db:studio`
- DB 스키마 적용: `npm run db:push`
- 프로덕션 빌드: `npm run build`